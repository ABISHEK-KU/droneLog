{
  "openapi": "3.0.0",
  "info": {
    "title": "Drone Log Management API",
    "version": "1.0.0",
    "description": "API for managing drone logs, incidents, and pre/post checks"
  },
  "servers": [
    {
      "url": "https://dronelog.onrender.com",
      "description": "Development server"
    }
  ],
  "paths": {
    "/api/drones/add": {
      "post": {
        "summary": "Add a new drone",
        "tags": ["Drones"],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": { "type": "string" },
                  "modelName": { "type": "string" },
                  "serial": { "type": "string" }
                },
                "required": ["name", "modelName", "serial"]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Drone added successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": { "type": "boolean" },
                    "message": { "type": "string" },
                    "data": { "$ref": "#/components/schemas/Drone" }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/api/drones/edit/{id}": {
      "put": {
        "summary": "Edit a drone",
        "tags": ["Drones"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": { "type": "string" },
                  "modelName": { "type": "string" },
                  "serial": { "type": "string" }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Drone updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": { "type": "boolean" },
                    "message": { "type": "string" },
                    "data": { "$ref": "#/components/schemas/Drone" }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Drone not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/api/drones/getallDrones": {
      "get": {
        "summary": "Get all drones",
        "tags": ["Drones"],
        "responses": {
          "200": {
            "description": "Drones retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": { "type": "boolean" },
                    "message": { "type": "string" },
                    "data": {
                      "type": "array",
                      "items": { "$ref": "#/components/schemas/Drone" }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/api/drones/delete/{id}": {
      "delete": {
        "summary": "Delete a drone",
        "tags": ["Drones"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "Drone and all associated data deleted successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": { "type": "boolean" },
                    "message": { "type": "string" }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Drone not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/api/logs/upload": {
      "post": {
        "summary": "Upload a log file",
        "tags": ["Logs"],
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "logFile": { "type": "string", "format": "binary" },
                  "droneId": { "type": "string" }
                },
                "required": ["logFile", "droneId"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Log uploaded successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": { "type": "boolean" },
                    "message": { "type": "string" }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          }
        }
      }
    },
    "/api/logs": {
      "get": {
        "summary": "Get all logs",
        "tags": ["Logs"],
        "responses": {
          "200": {
            "description": "Logs retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": { "type": "boolean" },
                    "message": { "type": "string" },
                    "data": {
                      "type": "array",
                      "items": { "$ref": "#/components/schemas/Log" }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          }
        }
      }
    },
    "/api/logs/{id}": {
      "get": {
        "summary": "Get a log by ID",
        "tags": ["Logs"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "Log retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": { "type": "boolean" },
                    "message": { "type": "string" },
                    "data": { "$ref": "#/components/schemas/Log" }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Log not found"
          },
          "400": {
            "description": "Bad request"
          }
        }
      },
      "delete": {
        "summary": "Delete a log by ID",
        "tags": ["Logs"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "Log deleted successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": { "type": "boolean" },
                    "message": { "type": "string" }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Log not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/api/incidents": {
      "get": {
        "summary": "Get all incidents",
        "tags": ["Incidents"],
        "responses": {
          "200": {
            "description": "Incidents retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": { "type": "boolean" },
                    "message": { "type": "string" },
                    "data": {
                      "type": "array",
                      "items": { "$ref": "#/components/schemas/Incident" }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          }
        }
      },
      "post": {
        "summary": "Create a new incident",
        "tags": ["Incidents"],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "drone": { "type": "string" },
                  "log": { "type": "string" },
                  "title": { "type": "string" },
                  "description": { "type": "string" },
                  "severity": { "type": "string", "enum": ["low", "medium", "high"] },
                  "createdBy": { "type": "string" }
                },
                "required": ["drone", "title"]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Incident created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": { "type": "boolean" },
                    "message": { "type": "string" },
                    "data": { "$ref": "#/components/schemas/Incident" }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          }
        }
      }
    },
    "/api/incidents/{id}": {
      "get": {
        "summary": "Get an incident by ID",
        "tags": ["Incidents"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "Incident retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": { "type": "boolean" },
                    "message": { "type": "string" },
                    "data": { "$ref": "#/components/schemas/Incident" }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Incident not found"
          },
          "400": {
            "description": "Bad request"
          }
        }
      },
      "put": {
        "summary": "Update an incident",
        "tags": ["Incidents"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "title": { "type": "string" },
                  "description": { "type": "string" },
                  "severity": { "type": "string", "enum": ["low", "medium", "high"] },
                  "createdBy": { "type": "string" }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Incident updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": { "type": "boolean" },
                    "message": { "type": "string" },
                    "data": { "$ref": "#/components/schemas/Incident" }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Incident not found"
          },
          "400": {
            "description": "Bad request"
          }
        }
      },
      "delete": {
        "summary": "Delete an incident",
        "tags": ["Incidents"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "Incident deleted successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": { "type": "boolean" },
                    "message": { "type": "string" }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Incident not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/api/prepostchecks": {
      "get": {
        "summary": "Get all pre/post checks",
        "tags": ["PrePostChecks"],
        "responses": {
          "200": {
            "description": "Pre/post checks retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": { "type": "boolean" },
                    "message": { "type": "string" },
                    "data": {
                      "type": "array",
                      "items": { "$ref": "#/components/schemas/PrePostCheck" }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          }
        }
      },
      "post": {
        "summary": "Create a new pre/post check",
        "tags": ["PrePostChecks"],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "drone": { "type": "string" },
                  "log": { "type": "string" },
                  "type": { "type": "string", "enum": ["pre", "post"] },
                  "items": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "name": { "type": "string" },
                        "ok": { "type": "boolean" },
                        "notes": { "type": "string" }
                      }
                    }
                  },
                  "performedBy": { "type": "string" }
                },
                "required": ["drone", "log", "type"]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Pre/post check created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": { "type": "boolean" },
                    "message": { "type": "string" },
                    "data": { "$ref": "#/components/schemas/PrePostCheck" }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          }
        }
      }
    },
    "/api/prepostchecks/{id}": {
      "get": {
        "summary": "Get a pre/post check by ID",
        "tags": ["PrePostChecks"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "Pre/post check retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": { "type": "boolean" },
                    "message": { "type": "string" },
                    "data": { "$ref": "#/components/schemas/PrePostCheck" }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Pre/post check not found"
          },
          "400": {
            "description": "Bad request"
          }
        }
      },
      "put": {
        "summary": "Update a pre/post check",
        "tags": ["PrePostChecks"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "type": { "type": "string", "enum": ["pre", "post"] },
                  "items": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "name": { "type": "string" },
                        "ok": { "type": "boolean" },
                        "notes": { "type": "string" }
                      }
                    }
                  },
                  "performedBy": { "type": "string" }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Pre/post check updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": { "type": "boolean" },
                    "message": { "type": "string" },
                    "data": { "$ref": "#/components/schemas/PrePostCheck" }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Pre/post check not found"
          },
          "400": {
            "description": "Bad request"
          }
        }
      },
      "delete": {
        "summary": "Delete a pre/post check",
        "tags": ["PrePostChecks"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "Pre/post check deleted successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": { "type": "boolean" },
                    "message": { "type": "string" }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Pre/post check not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "Drone": {
        "type": "object",
        "properties": {
          "_id": { "type": "string" },
          "name": { "type": "string" },
          "modelName": { "type": "string" },
          "serial": { "type": "string" },
          "createdAt": { "type": "string", "format": "date-time" }
        }
      },
      "Log": {
        "type": "object",
        "properties": {
          "_id": { "type": "string" },
          "drone": { "$ref": "#/components/schemas/Drone" },
          "filename": { "type": "string" },
          "path": { "type": "string" },
          "size": { "type": "number" },
          "startTime": { "type": "string", "format": "date-time" },
          "endTime": { "type": "string", "format": "date-time" },
          "durationSeconds": { "type": "number" },
          "gpsTrack": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "lat": { "type": "number" },
                "lon": { "type": "number" },
                "alt": { "type": "number" },
                "ts": { "type": "number" }
              }
            }
          },
          "messagesCount": { "type": "number" },
          "parsedSummary": { "type": "object" },
          "raw": { "type": "boolean" },
          "createdAt": { "type": "string", "format": "date-time" },
          "updatedAt": { "type": "string", "format": "date-time" }
        }
      },
      "Incident": {
        "type": "object",
        "properties": {
          "_id": { "type": "string" },
          "drone": { "$ref": "#/components/schemas/Drone" },
          "log": { "$ref": "#/components/schemas/Log" },
          "title": { "type": "string" },
          "description": { "type": "string" },
          "severity": { "type": "string", "enum": ["low", "medium", "high"] },
          "createdBy": { "type": "string" }
        }
      },
      "PrePostCheck": {
        "type": "object",
        "properties": {
          "_id": { "type": "string" },
          "drone": { "$ref": "#/components/schemas/Drone" },
          "log": { "$ref": "#/components/schemas/Log" },
          "type": { "type": "string", "enum": ["pre", "post"] },
          "items": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "name": { "type": "string" },
                "ok": { "type": "boolean" },
                "notes": { "type": "string" }
              }
            }
          },
          "performedBy": { "type": "string" },
          "createdAt": { "type": "string", "format": "date-time" },
          "updatedAt": { "type": "string", "format": "date-time" }
        }
      }
    }
  },
  "tags": [
    { "name": "Drones", "description": "Drone management operations" },
    { "name": "Logs", "description": "Log management operations" },
    { "name": "Incidents", "description": "Incident management operations" },
    { "name": "PrePostChecks", "description": "Pre/post check management operations" }
  ]
}
